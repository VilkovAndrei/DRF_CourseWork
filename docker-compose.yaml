version: "3"

services:

  db:
    image: postgres:16
    restart: on-failure
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - docker.env
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "-c", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5


  redis:
    image: redis:latest
    expose:
      - "6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 10s
      timeout: 5s
      retries: 5


  habits_app:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    tty: true
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000 "
    ports:
      - "8000:8000"
    volumes:
      - .:/habits_app
    env_file:
      - docker.env


  celery:
    build: .
    restart: on-failure
    depends_on:
      habits_app:
        condition: service_started
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    tty: true
    command: celery -A config worker -l INFO
    volumes:
      - .:/habits_app
    env_file:
      - docker.env


  celery-beat:
    build: .
    restart: on-failure
    depends_on:
      lms_app:
        condition: service_started
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    tty: true
    command: celery -A config beat -l INFO
    volumes:
      - .:/habits_app
    env_file:
      - docker.env

volumes:
  pg_data: